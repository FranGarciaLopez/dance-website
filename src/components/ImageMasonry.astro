---
import "photoswipe/dist/photoswipe.css";

interface Props {
  images: string[];
}
const { images } = Astro.props;

// Determine current path
const currentPath = Astro.url.pathname.replace(/\/$/, "").toLowerCase();

// Images to exclude from the main page
const excludeMain = ["aiinhoa", "cann"];

// Filter images depending on the route
const filteredImages =
  currentPath === "/galeria"
    ? images // show all images in /galeria
    : images.filter(
        (img) => !excludeMain.some((word) => img.toLowerCase().includes(word)),
      );

// Determine how many images to show
const numImages = currentPath === "/galeria" ? 9 : 7; // +2 images for /galeria
const displayedImages = filteredImages.slice(0, numImages);

const CLOUD_NAME = "dgvvnopu7";

function cldUrl(publicId: string, width?: number, height?: number) {
  const w = width ? `w_${width},` : "";
  const h = height ? `h_${height},` : "";
  return `https://res.cloudinary.com/${CLOUD_NAME}/image/upload/${w}${h}c_limit,q_auto,f_auto,dpr_auto/${publicId}.jpg`;
}
---

<section class="masonry-section px-6 py-12 max-w-5xl mx-auto" id="galeria">
  {
    currentPath === "/galeria" ? null : (
      <h2 class="text-4xl lg:text-5xl font-bebas font-normal tracking-tight uppercase  mb-14 max-w-5xl w-full mx-auto  drop-shadow-md">
        Galería de Imágenes - The Latin Action
      </h2>
    )
  }

  <div class="masonry-grid mx-auto" id="pswp-gallery">
    {
      displayedImages.map((publicId) => (
        <a
          href={cldUrl(publicId, 2000)}
          data-pswp-width="2000"
          data-pswp-height="1333"
          class="masonry-item block"
        >
          <div class="aspect-box">
            <img
              src={cldUrl(publicId, 600)}
              alt={publicId.replace(/[_-]/g, " ")}
              class="w-full h-full object-cover rounded-lg cursor-pointer hover:opacity-90 transition"
              loading="lazy"
            />
          </div>
        </a>
      ))
    }
  </div>
  {
    currentPath !== "/galeria" && (
      <div class="text-center mt-8">
        <a
          href="/galeria"
          class="inline-block px-6 py-3 rounded-full bg-gradient-to-r from-pink-400 to-purple-600 text-white font-bebas text-xl hover:scale-105 transform transition duration-300 uppercase shadow-lg hover:shadow-xl"
        >
          Ver Más Fotos
        </a>
      </div>
    )
  }
</section>

<!-- PhotoSwipe template -->
<div class="pswp" tabindex="-1" role="dialog" aria-hidden="true">
  <div class="pswp__bg"></div>
  <div class="pswp__scroll-wrap">
    <div class="pswp__container">
      <div class="pswp__item"></div>
      <div class="pswp__item"></div>
      <div class="pswp__item"></div>
    </div>
    <div class="pswp__ui pswp__ui--hidden">
      <div class="pswp__top-bar">
        <div class="pswp__counter"></div>
        <button class="pswp__button pswp__button--close" title="Cerrar (Esc)"
        ></button>
        <button class="pswp__button pswp__button--zoom" title="Zoom in/out"
        ></button>
        <div class="pswp__preloader">
          <div class="pswp__preloader__icn">
            <div class="pswp__preloader__cut">
              <div class="pswp__preloader__donut"></div>
            </div>
          </div>
        </div>
      </div>
      <div class="pswp__caption">
        <div class="pswp__caption__center"></div>
      </div>
    </div>
  </div>
</div>

<script type="module" is:inline>
  import PhotoSwipeLightbox from "https://cdn.jsdelivr.net/npm/photoswipe@5.3.9/dist/photoswipe-lightbox.esm.min.js";

 const lightbox = new PhotoSwipeLightbox({
  gallery: "#pswp-gallery",
  children: "a",
  pswpModule: () =>
    import(
      "https://cdn.jsdelivr.net/npm/photoswipe@5.3.9/dist/photoswipe.esm.min.js"
    ),
  
  zoomAnimationDuration: 0,
  arrowKeys: true,
  clickToCloseNonZoomable: true,
  mainScroll: false, // <-- prevents the small thumbnail "jump"
  maxSpreadZoom: 2,
});

  lightbox.on("gettingData", (e) => {
    if (!e.element || !e.data) return;

    const width = parseInt(e.element.dataset.pswpWidth || "0");
    const height = parseInt(e.element.dataset.pswpHeight || "0");

    if (width && height) {
      e.data.width = width;
      e.data.height = height;
    }
  });

  lightbox.init();
</script>

<style>
  .masonry-grid {
    column-count: 1;
    column-gap: 1rem;
  }
  @media (min-width: 768px) {
    .masonry-grid {
      column-count: 2;
    }
  }
  @media (min-width: 1024px) {
    .masonry-grid {
      column-count: 3;
    }
  }
  .masonry-item {
    margin-bottom: 1rem;
    break-inside: avoid;
    display: block;
  }

  /* PhotoSwipe image orientation styles */
  :global(.pswp__zoom-wrap) {
  display: flex !important;
  align-items: center !important;
  justify-content: center !important;
}

:global(.pswp__img) {
  margin: 0 auto !important;
  top: 0 !important;
  left: 0 !important;
  object-fit: contain !important;
}

:global(.pswp-portrait) {
  max-height: 90vh !important;
  width: auto !important;
}

  :global(.pswp-landscape) {
    max-width: 90vw !important;
    height: auto !important;
  }
</style>
